Security
Building APIs in Go
10 Jul 2016

Brian Ketelsen, Raphael Simon
bketelsen@goa.design
@bketelsen
raphael@goa.design
@rgsimon

* Security Considerations

A taste of what you need to know.

Take the time to research and understand these topics!

* XSS

Cross-site scriping attacks consist of injecting JavaScript into a page that causes end users to unknowingly make requests to an unauthorized server.

The request may carry user information and credentials that the unauthorized server receives and can exploit.

.image ./images/paypal_xss.jpg

* XSS Prevention

- Escape the HTML, HTML attributes, JSON and JavaScript embedded in responses.
- Validate the resource being accessed belongs to the tenant making the request in at least two different ways (e.g. request path + token)
- Know when an API request comes from a browser -> enforce stronger tenancy, use CSRF (see next).

You can differentiate between UI and API clients by putting a marker in the session (e.g. `Issuer` JWT claim).

* CSRF

Cross-Site Request Forgery leverages an existing user session to cause the user to execute unwanted actions on a web application.

These attacks target "state changing" requests and thus do not allow an attacker to retrieve information directly.

.image ./images/csrf.png

* CSRF Prevention

Protect `PUT`, `POST`, `DELETE` requests against Cross Site Request Forgery.

- Check `Origin` and / or `Referer` header
- Use CSRF tokens: these are generated by your UI (or API if UI is implemented on top) so you know the request originated from your service

* DDOS

Distributed Denial Of Service attacks consists of overloading a target application by sending it more traffic that it can handle causing failure.

Contrary to XSS or CSRF, DDOS attacks do not generally let attackers retrieve information or perform specific unauthorized actions.

DDOS attacks are not always malicious.

* DDOS Prevention

- Implement rate limiting (as a way to teach clients - doesn't actually help in case of real attack)
- Host in the cloud! Cloud vendors have *very* good DDOS protection mechanisms
- If you have the $$ use the pros (Akamai, CloudFlare etc.)
